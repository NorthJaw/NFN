{"ast":null,"code":"import _classCallCheck from \"/Users/naveenkumar/Downloads/kxjjjvm4m5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/naveenkumar/Downloads/kxjjjvm4m5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/naveenkumar/Downloads/kxjjjvm4m5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/naveenkumar/Downloads/kxjjjvm4m5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/naveenkumar/Downloads/kxjjjvm4m5/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/naveenkumar/Downloads/kxjjjvm4m5/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nvar EditForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditForm, _React$Component);\n\n  function EditForm(props) {\n    var _this;\n\n    _classCallCheck(this, EditForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditForm).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.handleSubmitCategory(_this.props.index, _this.state.value);\n    };\n\n    _this.state = {\n      value: _this.props.currentText\n    };\n    return _this;\n  }\n\n  _createClass(EditForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"inputForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Edit item:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditForm;\n}(React.Component);\n\nvar EditButton =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EditButton, _React$Component2);\n\n  function EditButton(props) {\n    var _this2;\n\n    _classCallCheck(this, EditButton);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(EditButton).call(this, props));\n\n    _this2.toggleInput = function () {\n      _this2.setState({\n        showInput: !_this2.state.showInput\n      });\n    };\n\n    _this2.state = {\n      showInput: false\n    };\n    return _this2;\n  }\n\n  _createClass(EditButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.toggleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" Edit \"), this.state.showInput ? React.createElement(EditForm, {\n        currentText: this.props.currentText,\n        handleSubmitCategory: this.props.handleSubmitCategory,\n        index: this.props.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return EditButton;\n}(React.Component);\n\nvar NewItem =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(NewItem, _React$Component3);\n\n  function NewItem() {\n    _classCallCheck(this, NewItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NewItem).apply(this, arguments));\n  }\n\n  _createClass(NewItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.props.item.isChecked,\n        id: \"checkbox_\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"\",\n        style: {\n          textDecoration: this.props.item.isChecked ? \"line-through\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.item.name), React.createElement(EditButton, {\n        currentText: this.props.item.name,\n        handleSubmitCategory: this.props.handleSubmitCategory,\n        index: this.props.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NewItem;\n}(React.Component);\n\nvar ToDoItems =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(ToDoItems, _React$Component4);\n\n  function ToDoItems() {\n    _classCallCheck(this, ToDoItems);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ToDoItems).apply(this, arguments));\n  }\n\n  _createClass(ToDoItems, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.props.data.length > 0) {\n        return this.props.data.map(function (item, index) {\n          return React.createElement(NewItem, {\n            item: item,\n            index: index,\n            handleSubmitCategory: _this3.props.handleSubmitCategory,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          });\n        });\n      } else return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" Empty \"));\n    }\n  }]);\n\n  return ToDoItems;\n}(React.Component);\n\nvar AddItem =\n/*#__PURE__*/\nfunction (_React$Component5) {\n  _inherits(AddItem, _React$Component5);\n\n  function AddItem(props) {\n    var _this4;\n\n    _classCallCheck(this, AddItem);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(AddItem).call(this, props));\n\n    _this4.handleChange = function (event) {\n      _this4.setState({\n        value: event.target.value\n      });\n    };\n\n    _this4.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this4.state.value.trim().length > 0) {\n        _this4.props.onSubmitText(_this4.state.value);\n      }\n\n      _this4.setState({\n        value: \"\"\n      });\n    };\n\n    _this4.state = {\n      value: \"\"\n    };\n    return _this4;\n  }\n\n  _createClass(AddItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"inputForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Add Item:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddItem;\n}(React.Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component6) {\n  _inherits(App, _React$Component6);\n\n  function App(props) {\n    var _this5;\n\n    _classCallCheck(this, App);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this5.handleSubmitCategory = function (index, message) {\n      //console.log(\"Entered\");\n      var temp = _this5.state.Categories;\n      console.log(index);\n      temp[index] = message;\n      console.log(temp[index]);\n\n      _this5.setState({\n        Categories: temp\n      });\n\n      console.log(_this5.state.Categories[index]);\n    };\n\n    _this5.onSubmitText = function (message) {\n      var newObject = {};\n      newObject[\"name\"] = message;\n      newObject[\"isChecked\"] = false;\n      var temp = _this5.state.Categories;\n      temp.push(newObject);\n\n      _this5.setState({\n        Categories: temp\n      });\n    };\n\n    _this5.state = {\n      Categories: [],\n      Items: []\n    };\n    return _this5;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SplitScreen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(ToDoItems, {\n        data: this.state.Categories,\n        handleSubmitCategory: this.handleSubmitCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(AddItem, {\n        onSubmitText: this.onSubmitText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"SplitScreen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 188\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/naveenkumar/Downloads/kxjjjvm4m5/src/index.js"],"names":["React","ReactDOM","EditForm","props","handleChange","event","setState","value","target","handleSubmit","preventDefault","handleSubmitCategory","index","state","currentText","Component","EditButton","toggleInput","showInput","NewItem","item","isChecked","textDecoration","name","ToDoItems","data","length","map","AddItem","trim","onSubmitText","App","message","temp","Categories","console","log","newObject","push","Items","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nclass EditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: this.props.currentText };\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.handleSubmitCategory(this.props.index, this.state.value);\n  };\n  render() {\n    return (\n      <form className=\"inputForm\" onSubmit={this.handleSubmit}>\n        <label>\n          Edit item:\n          <input\n            type=\"text\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nclass EditButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showInput: false };\n  }\n\n  toggleInput = () => {\n    this.setState({ showInput: !this.state.showInput });\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.toggleInput}> Edit </button>\n        {this.state.showInput ? (\n          <EditForm\n            currentText={this.props.currentText}\n            handleSubmitCategory={this.props.handleSubmitCategory}\n            index={this.props.index}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nclass NewItem extends React.Component {\n  render() {\n    return (\n      <div>\n        <input\n          type=\"checkbox\"\n          checked={this.props.item.isChecked}\n          id=\"checkbox_\"\n        />\n        <a\n          href=\"\"\n          style={{\n            textDecoration: this.props.item.isChecked ? \"line-through\" : \"none\"\n          }}\n        >\n          {this.props.item.name}\n        </a>\n        <EditButton\n          currentText={this.props.item.name}\n          handleSubmitCategory={this.props.handleSubmitCategory}\n          index={this.props.index}\n        />\n      </div>\n    );\n  }\n}\n\nclass ToDoItems extends React.Component {\n  render() {\n    if (this.props.data.length > 0) {\n      return this.props.data.map((item, index) => {\n        return (\n          <NewItem\n            item={item}\n            index={index}\n            handleSubmitCategory={this.props.handleSubmitCategory}\n          />\n        );\n      });\n    } else\n      return (\n        <div>\n          <p> Empty </p>\n        </div>\n      );\n  }\n}\n\nclass AddItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.value.trim().length > 0) {\n      this.props.onSubmitText(this.state.value);\n    }\n    this.setState({ value: \"\" });\n  };\n\n  render() {\n    return (\n      <form className=\"inputForm\" onSubmit={this.handleSubmit}>\n        <label>\n          Add Item:\n          <input\n            type=\"text\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { Categories: [], Items: [] };\n  }\n\n  handleSubmitCategory = (index, message) => {\n    //console.log(\"Entered\");\n    let temp = this.state.Categories;\n    console.log(index);\n    temp[index] = message;\n    console.log(temp[index]);\n    this.setState({ Categories: temp });\n    console.log(this.state.Categories[index]);\n  };\n\n  onSubmitText = message => {\n    let newObject = {};\n    newObject[\"name\"] = message;\n    newObject[\"isChecked\"] = false;\n    let temp = this.state.Categories;\n    temp.push(newObject);\n    this.setState({ Categories: temp });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"SplitScreen\">\n          <ToDoItems\n            data={this.state.Categories}\n            handleSubmitCategory={this.handleSubmitCategory}\n          />\n          <AddItem onSubmitText={this.onSubmitText} />\n        </div>\n        <div className=\"SplitScreen\" />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}